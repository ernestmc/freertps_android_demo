/*
 * Copyright (C) 2014 Ernesto Corbellini.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

/* 
 Examples of 
   1) dependencies from another project in this gradle stack.
   2,3) open ranged dependencies from a maven repository.
   
   It's a good idea to restrict the open ranged dependency to
   the patch version to avoid breakages due to api changes
   which usually occur on minor and major version numbers.
*/
 
dependencies {
  compile 'org.ros.android_core:android_10:[0.2,0.3)'
  compile 'org.ros.android_core:android_15:[0.2,0.3)'
  //compile files('src/main/libs/snakeyaml-android-1.8-SNAPSHOT.jar')
  //compile 'org.yaml:snakeyaml:1.8'
  compile fileTree(dir: "$buildDir/native-libs", include: '*.jar')
}


apply plugin: 'com.android.application'

android {
  buildToolsVersion "21.1.2" 
  compileSdkVersion 15
  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 15
    versionCode 1
    versionName "1.0"
  }
  
  sourceSets {
    main {
      jniLibs.srcDirs = ['native-libs']
      jni.srcDirs = [] //disable automatic ndk-build
    }
  }
  
  // call regular ndk-build(.cmd) script from app directory
  task ndkBuild(type: Exec) {
    //commandLine '/ndk-build', '-C', file('src/main').absolutePath
    commandLine getNdkBuildCmd(), '-C', file('src/main').absolutePath
  }

  tasks.withType(JavaCompile) {
      compileTask -> compileTask.dependsOn ndkBuild
  }
}
 
task nativeLibsToJar(type: Zip, description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'src/main/libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

def getNdkDir() {
  if (System.env.ANDROID_NDK_ROOT != null)
      return System.env.ANDROID_NDK_ROOT

  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  def ndkdir = properties.getProperty('ndk.dir', null)
  if (ndkdir == null)
      throw new GradleException("NDK location not found. Define location with ndk.dir in the local.properties file or with an ANDROID_NDK_ROOT environment variable.")

  return ndkdir
}

def getNdkBuildCmd(project_dir) {
  def ndkbuild = getNdkDir() + "/ndk-build"
 
  return ndkbuild
}
